syntax = "proto3";

package extapi;
option go_package = "github.com/niuroulamian/restful-api-service/extapi;extapi";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// choice of options is referring to https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/schemas/v2.0/schema.json
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "OMS API used by external and internal systems.";
    version: "0.1.0";
    description: "An example use case of this API will be for third party systems like Sprinklr to query information about customers and orders. Sprinklr uses this for its customer agents and bots.";
  };
  schemes: [HTTPS, HTTP];
  consumes: "application/json";
  produces: "application/json";
  security_definitions: {
    security: {
      key: "bearerAuth"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Authentication token, prefixed by Bearer: Bearer <token>"
      }
    }
  }
  security: {
    security_requirement: {
      key: "bearerAuth"
    }
  }
};

// MockAPIService is the service providing API endpoints implemented by mock API service
service MockAPIService {
  rpc GetServiceInfo (GetServiceInfoRequest) returns (GetServiceInfoResponse) {
    option (google.api.http) = {
      get: "/api/v1/service_info"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get and print service information";
      operation_id: "getServiceInfo";
      tags: "service";
      responses: {
        key: "200"
          value: {
          description: "OK";
        }
      }
    };
  }
}

// some description
message GetServiceInfoRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["service_id"]
    }
  };

  string service_id = 1 [
    json_name="serviceId",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "\"unique id of the service\"",
    }
  ];
}

message GetServiceInfoResponse {
  string response = 1 [
    json_name="response",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example:"\"hello world\"",
    }];
  int64 some_index = 2 [
    json_name="someIndex",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example:"123",
    }
  ];
}

